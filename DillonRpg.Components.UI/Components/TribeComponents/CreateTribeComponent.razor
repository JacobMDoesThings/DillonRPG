
@inject DialogService DialogService
<RadzenText TextStyle="TextStyle.H6" Text="Create Tribe" />

<div class="row mb-2">
    <div class="col">
        <RadzenLabel Text="Enter Tribe Name" />
        <RadzenTextBox />
    </div>
    <div class="col">
        <DropDownWithCreateButtonComponent TValue="string"
                                           Data="Abilities"
                                           TextProperty="Name"
                                           ValueProperty="Id"
                                           BindValue="_selectedAbility!.Name"
                                           LabelText="Select Ability"
                                           ButtonClick="OpenManageAbilities" />
    </div>

    <div class="col">
        <DropDownWithCreateButtonComponent TValue="string"
                                           Data="Classes"
                                           TextProperty="Name"
                                           ValueProperty="Id"
                                           BindValue="_selectedClass!.Name"
                                           LabelText="Select Class"
                                           ButtonClick="OpenManageClasses" />
    </div>
    <div class="col">
        <DropDownWithCreateButtonComponent TValue="string"
                                           Data="Families"
                                           TextProperty="Name"
                                           ValueProperty="Id"
                                           BindValue="_selectedFamily!.Name"
                                           LabelText="Select Family" 
                                           ButtonClick="OpenManageFamilies"/>
    </div>
</div>
<div class="mb-3">
    <RadzenButton class="me-2" Click=@(HideComponent) Text="Create" ButtonStyle="ButtonStyle.Primary" />
    <RadzenButton Click=@(HideComponent) Text="Cancel" ButtonStyle="ButtonStyle.Secondary" />
</div>
@code {
    private DialogOptions _dOptions = new DialogOptions() { Style = "max-height:75%" };
    private RadzenDropDown<string> check = new();
    [Parameter]
    public EventCallback HideComponent { get; set; }
    [Parameter]
    public IEnumerable<Ability> Abilities { get; set; } = Enumerable.Empty<Ability>();
    [Parameter]
    public IEnumerable<Class> Classes { get; set; } = Enumerable.Empty<Class>();
    [Parameter]
    public IEnumerable<Family> Families { get; set; } = Enumerable.Empty<Family>();

    private Ability? _selectedAbility = new();
    private Class? _selectedClass = new();
    private Family? _selectedFamily = new();

    public async Task OpenManageAbilities()
    {
        await DialogService.OpenAsync<ManageAbilitiesComponent>("",
        new Dictionary<string, object>(){
            { nameof(ManageAbilitiesComponent.Abilities), Abilities}},
            _dOptions);
    }

    public async Task OpenManageClasses()
    {
        await DialogService.OpenAsync<ManageClassesComponent>("",
        new Dictionary<string, object>(){
            { nameof(ManageClassesComponent.Classes), Classes}},
            _dOptions);
    }
    public async Task OpenManageFamilies()
    {
        await DialogService.OpenAsync<ManageFamiliesComponent>("",
        new Dictionary<string, object>(){
            { nameof(ManageFamiliesComponent.Families), Families}},
            _dOptions);
    }
}
